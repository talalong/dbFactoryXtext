grammar dbFactory.DbFactory with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate dbFactory "http://www.DbFactory.dbFactory"

Model:
	//(command+=Command)*
	(cmdTypes += Object | cmdTypes+=Database | cmdTypes += Query)+
	;
	
QualifiedName:
	ID('.'ID)*
;	
Command: 
	obj = Object | db=Database | query = Query
;
CommandType:
	Object | Database | Query
;
Object: 
('Objekt') name=ID ('von' superType = [Object])? 
   (LBRACERule 
	attributes+=Attribute*
	RBRACERule)?;
Attribute:
	name=ID ':' type=AttributeType  
;
AttributeName: name = ID;

AttributeType:
	elementType=ElementType(array ?= '['(length=INT)']')?
;
ElementType:
	StandardType | ObjectType
;
StandardType:
	typeName = ('Text'|'text'|'Zahl'|'zahl')
;
ObjectType:
	typeObj = [Object]
;
Database:
'Datenbank' name=ID conn=Connection
;
Connection:
	'verbindet' 'mit' host=Host ',' conName = ConnName ',' usrName = Username ',' pass=Password ',' port=Port
;
Host: 'Host' ':' v=STRING ;
ConnName: 'Verbindungsname' ':' v=STRING;
Username : 'Nutzername' ':' v=STRING;
Password: 'Passwort' ':' v=STRING;
Port: 'Port' ':' v=INT;
Query:
	'In' name = [Database] LBRACERule
		(stmts+=Create | stmts+=Insert | stmts+= Select | stmts+=Delete | stmts+=Update)+ // Warum nicht *
	RBRACERule
;
Statements:
	Create | Insert | Select | Delete | Update
;
Create:
	'Erzeuge' table= [Object]
;
Insert:
	'Füge' 'zu' table= [Object] '('	
	(columns += [Attribute| QualifiedName] '=' v+=STRING (',')?)*
	')' 
;
Select:
	'Zeige' 'von' table = [Object] '('
		columns += [Attribute|QualifiedName]*
	')' ( WhereCon (conditions+=Condition)*)?
;
//Param:s=[AttributeName];
Condition:
	 attName=[Attribute|QualifiedName]  '=' v=STRING (',')?
;
Delete:
	'Lösche' 'aus' table=[Object]  	
		 (where?=WhereCon (conditions += Condition)*)?
;
WhereCon:('wobei');
Update:
	'Ändere' 'in' table = [Object]  '('
	(columns += [Attribute|QualifiedName] '=' v+=STRING)* 
	 ')' (where?=WhereCon (conditions += Condition)*)?
;
terminal LBRACERule:'{';
terminal RBRACERule:'}';